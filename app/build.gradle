plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32

    signingConfigs {
        release {
            storeFile file("../compose-set.jks")
            storePassword "963852741"
            keyAlias "key0"
            keyPassword "963852741"
        }
    }

    defaultConfig {
        applicationId "com.example.compose"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"
        signingConfig signingConfigs.release
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled true
            debuggable true
            shrinkResources false
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            debuggable true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    implementation 'com.blankj:utilcodex:1.31.0'
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation "io.coil-kt:coil-compose:2.2.1"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation "com.squareup.okhttp3:okhttp:4.10.0"
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation platform("com.squareup.okhttp3:okhttp-bom:4.10.0")
    implementation 'com.squareup.okhttp3:logging-interceptor:3.3.1'
    implementation "androidx.paging:paging-runtime:3.1.1"
    implementation "androidx.paging:paging-compose:1.0.0-alpha14"
    implementation "com.google.accompanist:accompanist-swiperefresh:0.18.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"
}

task buildReleaseApk(dependsOn: 'assembleRelease') {
    def apkFolder = "${buildDir}/outputs/apk/release/"
    def targetApkFolder = "${rootProject.getProjectDir()}/release/"
    if (!file(targetApkFolder).exists()) {
        mkdir "${targetApkFolder}"
    }
    copy {
        from apkFolder
        into targetApkFolder
    }
}